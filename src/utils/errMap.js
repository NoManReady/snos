export default {
  esw: () => ({
    1007: I18N.t('esw.errmap["1007"]'),
    1008: I18N.t('esw.errmap["1008"]'),
    1009: I18N.t('esw.errmap["1009"]'),
    '-1': I18N.t('esw.errmap["-1"]'),
    0: I18N.t('esw.errmap["0"]'),
    7001: I18N.t('esw.errmap["7001"]'),
    7002: I18N.t('esw.errmap["7002"]'),
    7008: I18N.t('esw.errmap["7008"]'),
    7009: I18N.t('esw.errmap["7009"]'),
    7007: I18N.t('esw.errmap["7007"]'),
    7004: I18N.t('esw.errmap["7004"]'),
    7100: I18N.t('esw.errmap["7100"]'),
    7101: I18N.t('esw.errmap["7101"]'),
    7104: I18N.t('esw.errmap["7104"]'),
    7105: I18N.t('esw.errmap["7105"]'),
    7102: I18N.t('esw.errmap["7102"]'),
    7200: I18N.t('esw.errmap["7200"]'),
    7201: I18N.t('esw.errmap["7201"]'),
    7202: I18N.t('esw.errmap["7202"]'),
    7203: I18N.t('esw.errmap["7203"]'),
    7205: I18N.t('esw.errmap["7205"]'),
    7301: I18N.t('esw.errmap["7301"]'),
    7302: I18N.t('esw.errmap["7302"]'),
    7501: I18N.t('esw.errmap["7501"]'),
    7502: I18N.t('esw.errmap["7502"]'),
    7505: I18N.t('esw.errmap["7505"]'),
    7506: I18N.t('esw.errmap["7506"]'),
    7507: I18N.t('esw.errmap["7507"]'),
    7508: I18N.t('esw.errmap["7508"]'),
    7509: I18N.t('esw.errmap["7509"]'),
    7510: I18N.t('esw.errmap["7510"]'),
    7511: I18N.t('esw.errmap["7511"]'),
    7901: I18N.t('esw.errmap["7901"]'),
    7800: I18N.t('esw.errmap["7800"]'),
    7801: I18N.t('esw.errmap["7801"]'),
    8000: I18N.t('esw.errmap["8000"]'),
    8001: I18N.t('esw.errmap["8001"]'),
    8002: I18N.t('esw.errmap["8002"]'),
    8003: I18N.t('esw.errmap["8003"]'),
    8004: I18N.t('esw.errmap["8004"]'),
    8005: I18N.t('esw.errmap["8005"]'),
    8006: I18N.t('esw.errmap["8006"]'),
    8007: I18N.t('esw.errmap["8007"]'),
    8008: I18N.t('esw.errmap["8008"]'),
    8009: I18N.t('esw.errmap["8009"]'),
    8010: I18N.t('esw.errmap["8010"]'),
    8011: I18N.t('esw.errmap["8011"]'),
    8012: I18N.t('esw.errmap["8012"]'),
    8013: I18N.t('esw.errmap["8013"]'),
    8014: I18N.t('esw.errmap["8014"]'),
    8015: I18N.t('esw.errmap["8015"]'),
    8016: I18N.t('esw.errmap["8016"]'),
    8017: I18N.t('esw.errmap["8017"]'),
    8018: I18N.t('esw.errmap["8018"]'),
    8019: I18N.t('esw.errmap["8019"]')
  }),
  msw: () => ({
    // lua错误码及通用错误码表  范围：201-250
    201: I18N.t('msw.errmap["201"]'),
    202: I18N.t('msw.errmap["202"]'),
    203: I18N.t('msw.errmap["203"]'),
    204: I18N.t('msw.errmap["204"]'),
    205: I18N.t('msw.errmap["205"]'),
    206: I18N.t('msw.errmap["206"]'),
    // 端口配置错误码表  范围：251-310
    251: I18N.t('msw.errmap["251"]'),
    252: I18N.t('msw.errmap["252"]'),
    253: I18N.t('msw.errmap["253"]'),
    254: I18N.t('msw.errmap["254"]'),
    255: I18N.t('msw.errmap["255"]'),
    256: I18N.t('msw.errmap["256"]'),
    257: I18N.t('msw.errmap["257"]'),
    258: I18N.t('msw.errmap["258"]'),
    259: I18N.t('msw.errmap["259"]'),
    260: I18N.t('msw.errmap["260"]'),
    261: I18N.t('msw.errmap["261"]'),
    262: I18N.t('msw.errmap["262"]'),
    263: I18N.t('msw.errmap["263"]'),
    264: I18N.t('msw.errmap["264"]'),
    265: I18N.t('msw.errmap["265"]'),
    266: I18N.t('msw.errmap["266"]'),
    267: I18N.t('msw.errmap["267"]'),
    268: I18N.t('msw.errmap["268"]'),
    269: I18N.t('msw.errmap["269"]'),
    // 端口风暴控制错误码表  范围：311-320
    311: I18N.t('msw.errmap["311"]'),
    312: I18N.t('msw.errmap["312"]'),
    313: I18N.t('msw.errmap["313"]'),
    314: I18N.t('msw.errmap["314"]'),
    315: I18N.t('msw.errmap["315"]'),
    // 端口保护错误码表  范围：321-330
    321: I18N.t('msw.errmap["321"]'),
    322: I18N.t('msw.errmap["322"]'),
    // 聚合口错误码表  范围：331-360
    331: I18N.t('msw.errmap["331"]'),
    332: I18N.t('msw.errmap["332"]'),
    333: I18N.t('msw.errmap["333"]'),
    334: I18N.t('msw.errmap["334"]'),
    335: I18N.t('msw.errmap["335"]'),
    // 线缆检测错误码表  范围：361-370
    361: I18N.t('msw.errmap["361"]'),
    // 端口限速错误码表  范围：371-380
    371: I18N.t('msw.errmap["371"]'),
    372: I18N.t('msw.errmap["372"]'),
    // 流量日志错误码表  范围：381-390
    391: I18N.t('msw.errmap["391"]'),
    // acl错误码表  范围：391-450
    // vlan错误码表  范围：451-600
    451: I18N.t('msw.errmap["451"]'),
    452: I18N.t('msw.errmap["452"]'),
    453: I18N.t('msw.errmap["453"]'),
    454: I18N.t('msw.errmap["454"]'),
    455: I18N.t('msw.errmap["455"]'),
    456: I18N.t('msw.errmap["456"]'),
    457: I18N.t('msw.errmap["457"]'),
    458: I18N.t('msw.errmap["458"]'),
    459: I18N.t('msw.errmap["459"]'),
    460: I18N.t('msw.errmap["460"]'),
    461: I18N.t('msw.errmap["461"]'),
    462: I18N.t('msw.errmap["462"]'),
    463: I18N.t('msw.errmap["463"]'),
    464: I18N.t('msw.errmap["464"]'),
    465: I18N.t('msw.errmap["465"]'),
    467: I18N.t('msw.errmap["467"]'),
    468: I18N.t('msw.errmap["468"]'),
    469: I18N.t('msw.errmap["469"]'),
    // mac错误码表  范围：601-650
    601: I18N.t('msw.errmap["601"]'),
    602: I18N.t('msw.errmap["602"]'),
    603: I18N.t('msw.errmap["603"]'),
    604: I18N.t('msw.errmap["604"]'),
    605: I18N.t('msw.errmap["605"]'),
    606: I18N.t('msw.errmap["606"]'),
    607: I18N.t('msw.errmap["607"]'),
    608: I18N.t('msw.errmap["608"]'),
    609: I18N.t('msw.errmap["609"]'),
    610: I18N.t('msw.errmap["610"]'),
    611: I18N.t('msw.errmap["611"]'),
    612: I18N.t('msw.errmap["612"]'),
    613: I18N.t('msw.errmap["613"]'),
    614: I18N.t('msw.errmap["614"]'),
    615: I18N.t('msw.errmap["615"]'),
    616: I18N.t('msw.errmap["616"]'),
    617: I18N.t('msw.errmap["617"]'),
    618: I18N.t('msw.errmap["618"]'),
    619: I18N.t('msw.errmap["619"]'),
    620: I18N.t('msw.errmap["620"]'),
    // stp错误码表。 范围：651-700
    651: I18N.t('msw.errmap["651"]'),
    652: I18N.t('msw.errmap["652"]'),
    653: I18N.t('msw.errmap["653"]'),
    654: I18N.t('msw.errmap["654"]'),
    655: I18N.t('msw.errmap["655"]'),
    656: I18N.t('msw.errmap["656"]'),
    657: I18N.t('msw.errmap["657"]'),
    658: I18N.t('msw.errmap["658"]'),
    659: I18N.t('msw.errmap["659"]'),
    660: I18N.t('msw.errmap["660"]'),
    661: I18N.t('msw.errmap["661"]'),
    662: I18N.t('msw.errmap["662"]'),
    663: I18N.t('msw.errmap["663"]'),
    664: I18N.t('msw.errmap["664"]'),
    665: I18N.t('msw.errmap["665"]'),
    666: I18N.t('msw.errmap["666"]'),
    667: I18N.t('msw.errmap["667"]'),
    668: I18N.t('msw.errmap["668"]'),
    669: I18N.t('msw.errmap["669"]'),
    670: I18N.t('msw.errmap["670"]'),
    671: I18N.t('msw.errmap["671"]'),
    672: I18N.t('msw.errmap["672"]'),
    // lldp错误码表。 范围：701-730
    701: I18N.t('msw.errmap["701"]'),
    702: I18N.t('msw.errmap["702"]'),
    703: I18N.t('msw.errmap["703"]'),
    704: I18N.t('msw.errmap["704"]'),
    705: I18N.t('msw.errmap["705"]'),
    706: I18N.t('msw.errmap["706"]'),
    707: I18N.t('msw.errmap["707"]'),
    708: I18N.t('msw.errmap["708"]'),
    709: I18N.t('msw.errmap["709"]'),
    710: I18N.t('msw.errmap["710"]'),
    711: I18N.t('msw.errmap["711"]'),
    712: I18N.t('msw.errmap["712"]'),
    713: I18N.t('msw.errmap["713"]'),
    714: I18N.t('msw.errmap["714"]'),
    715: I18N.t('msw.errmap["715"]'),
    716: I18N.t('msw.errmap["716"]'),
    717: I18N.t('msw.errmap["717"]'),
    // dhcp_snooping错误码表。 范围：731-750
    731: I18N.t('msw.errmap["731"]'),
    732: I18N.t('msw.errmap["732"]'),
    733: I18N.t('msw.errmap["733"]'),
    734: I18N.t('msw.errmap["734"]'),
    735: I18N.t('msw.errmap["735"]'),
    736: I18N.t('msw.errmap["736"]'),
    // mirror错误码表。 范围：751-780
    751: I18N.t('msw.errmap["751"]'),
    752: I18N.t('msw.errmap["752"]'),
    753: I18N.t('msw.errmap["753"]'),
    754: I18N.t('msw.errmap["754"]'),
    755: I18N.t('msw.errmap["755"]'),
    756: I18N.t('msw.errmap["756"]'),
    757: I18N.t('msw.errmap["757"]'),
    758: I18N.t('msw.errmap["758"]')
  })
};
